name: Function Apps Promotion

on:
  workflow_dispatch:
    inputs:
      function_app:
        description: 'Function App to promote'
        required: true
        type: choice
        options:
          - functionapp1
          - functionapp2
      source_environment:
        description: 'Source Environment'
        required: true
        type: choice
        options:
          - dev
          - qa
      target_environment:
        description: 'Target Environment'
        required: true
        type: choice
        options:
          - qa
          - prod
      artifact_id:
        description: 'Specific artifact ID to promote (format: {timestamp}-{run_id} or leave empty for latest)'
        required: false
        type: string

jobs:
  list-available-artifacts:
    name: List ${{ github.event.inputs.function_app }} artifacts in ${{ github.event.inputs.source_environment }}
    # This job will run first to list available artifacts for reference
    runs-on: ubuntu-latest
    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          
      - name: List Available Artifacts
        run: |
          echo "Available artifacts for ${{ github.event.inputs.function_app }} in ${{ github.event.inputs.source_environment }}:"
          echo "--------------------------------------------------------------"
          az storage blob list --account-name ${{ secrets.STORAGE_ACCOUNT_NAME }} \
            --container-name function-artifacts \
            --prefix "${{ github.event.inputs.function_app }}-${{ github.event.inputs.source_environment }}" \
            --auth-mode login \
            --query "[].{Name:name, LastModified:properties.lastModified}" \
            --output table
          echo "--------------------------------------------------------------"
          echo "To use a specific artifact, use the timestamp-runid portion from the artifact name"
          echo "For example, from 'functionapp1-dev-20230421123456-12345.zip', use '20230421123456-12345'"

  get-artifact:
    name: Fetch ${{ github.event.inputs.function_app }} artifact from ${{ github.event.inputs.source_environment }}
    needs: list-available-artifacts
    runs-on: ubuntu-latest
    outputs:
      artifact_name: ${{ steps.set-artifact.outputs.artifact_name }}
    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get deployment artifact
        id: set-artifact
        run: |
          # Get the latest artifact from storage if none specified
          if [ -z "${{ github.event.inputs.artifact_id }}" ]; then
            echo "Looking for latest ${{ github.event.inputs.function_app }} artifact in ${{ github.event.inputs.source_environment }}..."
            
            # List blobs and sort by date (newest first)
            LATEST_ARTIFACT=$(az storage blob list --account-name ${{ secrets.STORAGE_ACCOUNT_NAME }} --container-name function-artifacts --prefix "${{ github.event.inputs.function_app }}-${{ github.event.inputs.source_environment }}" --auth-mode login --query "[].name" -o tsv | sort -r | head -n 1)
            
            if [ -z "$LATEST_ARTIFACT" ]; then
              echo "No artifacts found for ${{ github.event.inputs.function_app }} in ${{ github.event.inputs.source_environment }}"
              exit 1
            fi
            
            echo "artifact_name=$LATEST_ARTIFACT" >> $GITHUB_OUTPUT
            echo "Found latest artifact: $LATEST_ARTIFACT"
          else
            # Use the specified artifact ID
            ARTIFACT_NAME="${{ github.event.inputs.function_app }}-${{ github.event.inputs.source_environment }}-${{ github.event.inputs.artifact_id }}.zip"
            echo "artifact_name=$ARTIFACT_NAME" >> $GITHUB_OUTPUT
            echo "Using specified artifact: $ARTIFACT_NAME"
          fi

  promote:
    name: Promote ${{ github.event.inputs.function_app }} from ${{ github.event.inputs.source_environment }} to ${{ github.event.inputs.target_environment }}
    needs: get-artifact
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.target_environment }}
    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Create temp directory
        run: mkdir -p artifacts
      
      - name: Download artifact from storage
        run: |
          echo "Downloading artifact: ${{ needs.get-artifact.outputs.artifact_name }}"
          # Download using auth-mode login (requires storage blob data contributor role)
          az storage blob download --account-name ${{ secrets.STORAGE_ACCOUNT_NAME }} --container-name function-artifacts --name "${{ needs.get-artifact.outputs.artifact_name }}" --file "./artifacts/${{ github.event.inputs.function_app }}.zip" --auth-mode login
          
      - name: Deploy Function App
        id: deploy-function
        uses: azure/functions-action@v1
        with:
          app-name: ${{ github.event.inputs.function_app }}-${{ github.event.inputs.target_environment }}-jp
          package: ./artifacts/${{ github.event.inputs.function_app }}.zip
          # Using service principal authentication instead of publish profile
          
      - name: Record promotion in Azure
        run: |
          # Tag the function app with promotion information
            TIMESTAMP=$(date +"%Y-%m-%d %H:%M:%S")
          
          # Set resource group based on target environment
          if [ "${{ github.event.inputs.target_environment }}" == "qa" ]; then
            RESOURCE_GROUP="qa-jp-functionapp-rg" # Replace with your QA resource group name
          elif [ "${{ github.event.inputs.target_environment }}" == "prod" ]; then
            RESOURCE_GROUP="ProdResourceGroup" # Replace with your Prod resource group name
          else
            RESOURCE_GROUP="DevResourceGroup" # Replace with your Dev resource group name
          fi
          
          echo "Using resource group: $RESOURCE_GROUP for ${{ github.event.inputs.target_environment }} environment"
          
          az tag create --resource-id /subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/$RESOURCE_GROUP/providers/Microsoft.Web/sites/${{ github.event.inputs.function_app }}-${{ github.event.inputs.target_environment }}-jp \
            --tags \
              PromotedFrom=${{ github.event.inputs.source_environment }} \
              PromotionDate=$TIMESTAMP \
              PromotedBy=${{ github.actor }} \
              SourceArtifact=${{ needs.get-artifact.outputs.artifact_name }}
              
          
          echo "Promotion completed: ${{ github.event.inputs.function_app }} from ${{ github.event.inputs.source_environment }} to ${{ github.event.inputs.target_environment }}"